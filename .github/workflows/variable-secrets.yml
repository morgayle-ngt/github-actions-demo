name: Exploring Variables and Secrets with Github Actions

on: [push, workflow_dispatch]
 # push
 # schedule:
 #   - cron: "*/1 * * * *"

# jobs:
    # docker:
    #   runs-on: ubuntu-latest
    #   steps:
    #   - name: Docker Build
    #     run: docker build -t docker.io/dockerUsername/imageName:latest

    #   - name: Docker Login
    #     run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

    #   - name: Docker Publish
    #     run: docker push docker.io/dockerUsername/imageName:latest
    
    # deploy:
    #   needs: docker
    #   runs-on: ubuntu-latest
    #   steps:
    #   - name: Docker Run
    #     run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

# jobs:
    ########### Environment Variables at Step Level ###########

#   docker:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build
#       env:
#         CONTAINER_REGISTRY: docker.io
#         {{ vars.DOCKER_USERNAME }}: ngtmike99
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    
#     - name: Docker Login
#       env:
#         DOCKER_PASSWORD: s3cUrePaSsw0rd
#         {{ vars.DOCKER_USERNAME }}: ngtmike99
#       run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=$DOCKER_PASSWORD

#     - name: Docker Publish
#       env:
#         CONTAINER_REGISTRY: docker.io
#         {{ vars.DOCKER_USERNAME }}: ngtmike99
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Run
#       env:
#         CONTAINER_REGISTRY: docker.io
#         {{ vars.DOCKER_USERNAME }}: ngtmike99
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

# jobs:
#     ########### Environment Variables at Job Level ###########
#   docker:
#     env:
#         CONTAINER_REGISTRY: docker.io
#         {{ vars.DOCKER_USERNAME }}: ngtmike99
#         IMAGE_NAME: github-actions-nginx
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build 
#       run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
      
#     - name: Docker Login
#       env:
#         DOCKER_PASSWORD: s3cUrePaSsw0rd
#       run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=$DOCKER_PASSWORD

#     - name: Docker Publish
#       IMAGE_NAME: github-actions-nginx
#       run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

#    deploy:
#      env:
#        CONTAINER_REGISTRY: docker.io
#        {{ vars.DOCKER_USERNAME }}: ngtmike99
#        IMAGE_NAME: github-actions-nginx
#      needs: docker
#      runs-on: ubuntu-latest
#      steps:
#      - name: Docker Run
#        run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

 ########### Environment Variables at Workflow Level ###########
env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: github-actions-nginx

jobs:
  docker:
   runs-on: ubuntu-latest
   steps:
   - name: Docker Build 
     run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
     
   - name: Docker Login
     run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

   - name: Docker Publish
     run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: docker
    concurrency:
      group: production-deployment
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
    - name: Docker Run
      timeout-minutes: 1
      run: |
        echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        sleep 6000s